%!PS-Adobe-2.0 EPSF-2.0
%%Title: qAbstract-sDescription_MAP_2010.eps
%%Creator: gnuplot 4.6 patchlevel 5
%%CreationDate: Fri Jun  6 17:49:52 2014
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 248 176
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following true/false flags may be edited by hand if desired.
% The unit line width and grayscale image gamma correction may also be changed.
%
/Color true def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape false def
/Level1 false def
/Rounded false def
/ClipToBoundingBox false def
/SuppressPDFMark false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/Gamma 1.0 def
/BackgroundColor {-1.000 -1.000 -1.000} def
%
/vshift -56 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
/doclip {
  ClipToBoundingBox {
    newpath 50 50 moveto 248 50 lineto 248 176 lineto 50 176 lineto closepath
    clip
  } if
} def
%
% Gnuplot Prolog Version 4.6 (September 2012)
%
%/SuppressPDFMark true def
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/g {setgray} bind def
/Gshow {show} def   % May be redefined later in the file to support UTF-8
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
3.8 setmiterlimit
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
  clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
%
% Encoding for ISO-8859-1 (also called Latin1)
%
/reencodeISO {
dup dup findfont dup length dict begin
{ 1 index /FID ne { def }{ pop pop } ifelse } forall
currentdict /CharStrings known {
	CharStrings /Idieresis known {
		/Encoding ISOLatin1Encoding def } if
} if
currentdict end definefont
} def
/ISOLatin1Encoding [
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/space/exclam/quotedbl/numbersign/dollar/percent/ampersand/quoteright
/parenleft/parenright/asterisk/plus/comma/minus/period/slash
/zero/one/two/three/four/five/six/seven/eight/nine/colon/semicolon
/less/equal/greater/question/at/A/B/C/D/E/F/G/H/I/J/K/L/M/N
/O/P/Q/R/S/T/U/V/W/X/Y/Z/bracketleft/backslash/bracketright
/asciicircum/underscore/quoteleft/a/b/c/d/e/f/g/h/i/j/k/l/m
/n/o/p/q/r/s/t/u/v/w/x/y/z/braceleft/bar/braceright/asciitilde
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/dotlessi/grave/acute/circumflex/tilde/macron/breve
/dotaccent/dieresis/.notdef/ring/cedilla/.notdef/hungarumlaut
/ogonek/caron/space/exclamdown/cent/sterling/currency/yen/brokenbar
/section/dieresis/copyright/ordfeminine/guillemotleft/logicalnot
/hyphen/registered/macron/degree/plusminus/twosuperior/threesuperior
/acute/mu/paragraph/periodcentered/cedilla/onesuperior/ordmasculine
/guillemotright/onequarter/onehalf/threequarters/questiondown
/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
/Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex
/Idieresis/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis
/multiply/Oslash/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute
/Thorn/germandbls/agrave/aacute/acircumflex/atilde/adieresis
/aring/ae/ccedilla/egrave/eacute/ecircumflex/edieresis/igrave
/iacute/icircumflex/idieresis/eth/ntilde/ograve/oacute/ocircumflex
/otilde/odieresis/divide/oslash/ugrave/uacute/ucircumflex/udieresis
/yacute/thorn/ydieresis
] def
/MFshow {
   { dup 5 get 3 ge
     { 5 get 3 eq {gsave} {grestore} ifelse }
     {dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch R dup 5 get 2 ne {dup dup 6
     get exch 4 get {Gshow} {stringwidth pop 0 R} ifelse }if dup 5 get 0 eq
     {dup 3 get {2 get neg 0 exch R pop} {pop aload pop M} ifelse} {dup 5
     get 1 eq {dup 2 get exch dup 3 get exch 6 get stringwidth pop -2 div
     dup 0 R} {dup 6 get stringwidth pop -2 div 0 R 6 get
     show 2 index {aload pop M neg 3 -1 roll neg R pop pop} {pop pop pop
     pop aload pop M} ifelse }ifelse }ifelse }
     ifelse }
   forall} def
/Gswidth {dup type /stringtype eq {stringwidth} {pop (n) stringwidth} ifelse} def
/MFwidth {0 exch { dup 5 get 3 ge { 5 get 3 eq { 0 } { pop } ifelse }
 {dup 3 get{dup dup 0 get findfont exch 1 get scalefont setfont
     6 get Gswidth pop add} {pop} ifelse} ifelse} forall} def
/MLshow { currentpoint stroke M
  0 exch R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/XYsave    { [( ) 1 2 true false 3 ()] } bind def
/XYrestore { [( ) 1 2 true false 4 ()] } bind def
/Courier reencodeISO def
Level1 SuppressPDFMark or 
{} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (qAbstract-sDescription_MAP_2010.eps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.6 patchlevel 5)
  /Author (rbouadjenek)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Fri Jun  6 17:49:52 2014)
  /DOCINFO pdfmark
end
} ifelse
end
%%EndProlog
%%Page: 1 1
gnudict begin
gsave
doclip
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Courier) findfont 170 scalefont setfont
BackgroundColor 0 lt 3 1 roll 0 lt exch 0 lt or or not {BackgroundColor C 1.000 0 0 3960.00 2520.00 BoxColFill} if
1.000 UL
LTb
LCb setrgbcolor
1.000 UL
LTa
LCa setrgbcolor
765 590 M
2888 0 V
stroke
LTb
LCb setrgbcolor
765 590 M
63 0 V
2825 0 R
-63 0 V
stroke
663 590 M
[ [(Courier) 170.0 0.0 true true 0 ( 0)]
] -56.7 MRshow
1.000 UL
LTb
LCb setrgbcolor
1.000 UL
LTa
LCa setrgbcolor
765 878 M
102 0 V
2103 0 R
683 0 V
stroke
LTb
LCb setrgbcolor
765 878 M
63 0 V
2825 0 R
-63 0 V
stroke
663 878 M
[ [(Courier) 170.0 0.0 true true 0 ( 0.02)]
] -56.7 MRshow
1.000 UL
LTb
LCb setrgbcolor
1.000 UL
LTa
LCa setrgbcolor
765 1165 M
102 0 V
2103 0 R
683 0 V
stroke
LTb
LCb setrgbcolor
765 1165 M
63 0 V
2825 0 R
-63 0 V
stroke
663 1165 M
[ [(Courier) 170.0 0.0 true true 0 ( 0.04)]
] -56.7 MRshow
1.000 UL
LTb
LCb setrgbcolor
1.000 UL
LTa
LCa setrgbcolor
765 1453 M
102 0 V
2103 0 R
683 0 V
stroke
LTb
LCb setrgbcolor
765 1453 M
63 0 V
2825 0 R
-63 0 V
stroke
663 1453 M
[ [(Courier) 170.0 0.0 true true 0 ( 0.06)]
] -56.7 MRshow
1.000 UL
LTb
LCb setrgbcolor
1.000 UL
LTa
LCa setrgbcolor
765 1741 M
102 0 V
2103 0 R
683 0 V
stroke
LTb
LCb setrgbcolor
765 1741 M
63 0 V
2825 0 R
-63 0 V
stroke
663 1741 M
[ [(Courier) 170.0 0.0 true true 0 ( 0.08)]
] -56.7 MRshow
1.000 UL
LTb
LCb setrgbcolor
1.000 UL
LTa
LCa setrgbcolor
765 2028 M
2888 0 V
stroke
LTb
LCb setrgbcolor
765 2028 M
63 0 V
2825 0 R
-63 0 V
stroke
663 2028 M
[ [(Courier) 170.0 0.0 true true 0 ( 0.1)]
] -56.7 MRshow
1.000 UL
LTb
LCb setrgbcolor
1.000 UL
LTa
LCa setrgbcolor
765 2316 M
2888 0 V
stroke
LTb
LCb setrgbcolor
765 2316 M
63 0 V
2825 0 R
-63 0 V
stroke
663 2316 M
[ [(Courier) 170.0 0.0 true true 0 ( 0.12)]
] -56.7 MRshow
1.000 UL
LTb
LCb setrgbcolor
1.000 UL
LTa
LCa setrgbcolor
765 590 M
0 1726 V
stroke
LTb
LCb setrgbcolor
765 590 M
0 63 V
stroke
765 488 M
currentpoint gsave translate -45 rotate 0 0 moveto
[ [(Courier) 170.0 0.0 true true 0 ( 0)]
] -56.7 MLshow
grestore
1.000 UL
LTb
LCb setrgbcolor
1.000 UL
LTa
LCa setrgbcolor
1126 590 M
0 63 V
0 1360 R
0 303 V
stroke
LTb
LCb setrgbcolor
1126 590 M
0 63 V
stroke
1126 488 M
currentpoint gsave translate -45 rotate 0 0 moveto
[ [(Courier) 170.0 0.0 true true 0 ( 2)]
] -56.7 MLshow
grestore
1.000 UL
LTb
LCb setrgbcolor
1.000 UL
LTa
LCa setrgbcolor
1487 590 M
0 63 V
0 1360 R
0 303 V
stroke
LTb
LCb setrgbcolor
1487 590 M
0 63 V
stroke
1487 488 M
currentpoint gsave translate -45 rotate 0 0 moveto
[ [(Courier) 170.0 0.0 true true 0 ( 4)]
] -56.7 MLshow
grestore
1.000 UL
LTb
LCb setrgbcolor
1.000 UL
LTa
LCa setrgbcolor
1848 590 M
0 63 V
0 1360 R
0 303 V
stroke
LTb
LCb setrgbcolor
1848 590 M
0 63 V
stroke
1848 488 M
currentpoint gsave translate -45 rotate 0 0 moveto
[ [(Courier) 170.0 0.0 true true 0 ( 6)]
] -56.7 MLshow
grestore
1.000 UL
LTb
LCb setrgbcolor
1.000 UL
LTa
LCa setrgbcolor
2209 590 M
0 63 V
0 1360 R
0 303 V
stroke
LTb
LCb setrgbcolor
2209 590 M
0 63 V
stroke
2209 488 M
currentpoint gsave translate -45 rotate 0 0 moveto
[ [(Courier) 170.0 0.0 true true 0 ( 8)]
] -56.7 MLshow
grestore
1.000 UL
LTb
LCb setrgbcolor
1.000 UL
LTa
LCa setrgbcolor
2570 590 M
0 63 V
0 1360 R
0 303 V
stroke
LTb
LCb setrgbcolor
2570 590 M
0 63 V
stroke
2570 488 M
currentpoint gsave translate -45 rotate 0 0 moveto
[ [(Courier) 170.0 0.0 true true 0 ( 10)]
] -56.7 MLshow
grestore
1.000 UL
LTb
LCb setrgbcolor
1.000 UL
LTa
LCa setrgbcolor
2931 590 M
0 63 V
0 1360 R
0 303 V
stroke
LTb
LCb setrgbcolor
2931 590 M
0 63 V
stroke
2931 488 M
currentpoint gsave translate -45 rotate 0 0 moveto
[ [(Courier) 170.0 0.0 true true 0 ( 12)]
] -56.7 MLshow
grestore
1.000 UL
LTb
LCb setrgbcolor
1.000 UL
LTa
LCa setrgbcolor
3292 590 M
0 1726 V
stroke
LTb
LCb setrgbcolor
3292 590 M
0 63 V
stroke
3292 488 M
currentpoint gsave translate -45 rotate 0 0 moveto
[ [(Courier) 170.0 0.0 true true 0 ( 14)]
] -56.7 MLshow
grestore
1.000 UL
LTb
LCb setrgbcolor
1.000 UL
LTa
LCa setrgbcolor
3653 590 M
0 1726 V
stroke
LTb
LCb setrgbcolor
3653 590 M
0 63 V
stroke
3653 488 M
currentpoint gsave translate -45 rotate 0 0 moveto
[ [(Courier) 170.0 0.0 true true 0 ( 16)]
] -56.7 MLshow
grestore
1.000 UL
LTb
LCb setrgbcolor
1.000 UL
LTb
LCb setrgbcolor
765 2316 N
765 590 L
2888 0 V
0 1726 V
-2888 0 V
Z stroke
LCb setrgbcolor
/Helvetica reencodeISO def
2209 119 M
[ [(Helvetica) 220.0 0.0 true true 0 (Number of terms)]
] -73.3 MCshow
LTb
1.000 UP
1.000 UL
LTb
LCb setrgbcolor
% Begin plot #1
1.000 UP
4.000 UL
LT0
LC0 setrgbcolor
LCb setrgbcolor
2295 1928 M
[ [(Courier) 170.0 0.0 true true 0 (MMRQR BM25)]
] -56.7 MRshow
LT0
2397 1928 M
471 0 V
765 590 M
946 2071 L
180 1 V
181 -1 V
180 -14 V
181 -11 V
180 -7 V
361 -31 V
361 -40 V
361 -56 V
361 -45 V
361 -91 V
765 590 Pls
946 2071 Pls
1126 2072 Pls
1307 2071 Pls
1487 2057 Pls
1668 2046 Pls
1848 2039 Pls
2209 2008 Pls
2570 1968 Pls
2931 1912 Pls
3292 1867 Pls
3653 1776 Pls
2632 1928 Pls
% End plot #1
% Begin plot #2
1.000 UP
4.000 UL
LT1
LC1 setrgbcolor
LCb setrgbcolor
2295 1758 M
[ [(Courier) 170.0 0.0 true true 0 (MMRQR VSM)]
] -56.7 MRshow
LT1
2397 1758 M
471 0 V
765 590 M
946 2085 L
180 0 V
181 -1 V
180 -10 V
181 -14 V
180 -16 V
361 -14 V
361 -39 V
361 -46 V
361 -69 V
361 -81 V
765 590 Crs
946 2085 Crs
1126 2085 Crs
1307 2084 Crs
1487 2074 Crs
1668 2060 Crs
1848 2044 Crs
2209 2030 Crs
2570 1991 Crs
2931 1945 Crs
3292 1876 Crs
3653 1795 Crs
2632 1758 Crs
% End plot #2
% Begin plot #3
1.000 UP
4.000 UL
LT2
LC2 setrgbcolor
LCb setrgbcolor
2295 1588 M
[ [(Courier) 170.0 0.0 true true 0 (RocchioQR BM25)]
] -56.7 MRshow
LT2
2397 1588 M
471 0 V
765 2070 M
181 66 V
180 -1 V
181 -1 V
180 -7 V
181 -15 V
180 -13 V
361 -28 V
361 -49 V
361 -63 V
361 -54 V
361 -60 V
765 2070 Star
946 2136 Star
1126 2135 Star
1307 2134 Star
1487 2127 Star
1668 2112 Star
1848 2099 Star
2209 2071 Star
2570 2022 Star
2931 1959 Star
3292 1905 Star
3653 1845 Star
2632 1588 Star
% End plot #3
% Begin plot #4
1.000 UP
4.000 UL
LT3
LC3 setrgbcolor
LCb setrgbcolor
2295 1418 M
[ [(Courier) 170.0 0.0 true true 0 (RocchioQR VSM)]
] -56.7 MRshow
LT3
2397 1418 M
471 0 V
765 2087 M
181 15 V
180 2 V
181 -3 V
180 -1 V
181 -19 V
180 -12 V
361 -50 V
361 -39 V
361 -65 V
361 -51 V
361 -71 V
765 2087 Box
946 2102 Box
1126 2104 Box
1307 2101 Box
1487 2100 Box
1668 2081 Box
1848 2069 Box
2209 2019 Box
2570 1980 Box
2931 1915 Box
3292 1864 Box
3653 1793 Box
2632 1418 Box
% End plot #4
% Begin plot #5
1.000 UP
4.000 UL
LT4
LC4 setrgbcolor
LCb setrgbcolor
2295 1248 M
[ [(Courier) 170.0 0.0 true true 0 (LMQR BM25)]
] -56.7 MRshow
LT4
2397 1248 M
471 0 V
765 2070 M
181 1 V
180 3 V
181 -1 V
180 -7 V
181 -6 V
180 -9 V
361 -7 V
361 -21 V
361 -21 V
361 -92 V
361 -69 V
765 2070 BoxF
946 2071 BoxF
1126 2074 BoxF
1307 2073 BoxF
1487 2066 BoxF
1668 2060 BoxF
1848 2051 BoxF
2209 2044 BoxF
2570 2023 BoxF
2931 2002 BoxF
3292 1910 BoxF
3653 1841 BoxF
2632 1248 BoxF
% End plot #5
% Begin plot #6
1.000 UP
4.000 UL
LT5
LC5 setrgbcolor
LCb setrgbcolor
2295 1078 M
[ [(Courier) 170.0 0.0 true true 0 (LMQR VSM)]
] -56.7 MRshow
LT5
2397 1078 M
471 0 V
765 2087 M
181 -2 V
180 0 V
181 4 V
180 -9 V
181 -10 V
180 -9 V
361 -5 V
361 -35 V
361 -24 V
361 -59 V
361 -76 V
765 2087 Circle
946 2085 Circle
1126 2085 Circle
1307 2089 Circle
1487 2080 Circle
1668 2070 Circle
1848 2061 Circle
2209 2056 Circle
2570 2021 Circle
2931 1997 Circle
3292 1938 Circle
3653 1862 Circle
2632 1078 Circle
% End plot #6
% Begin plot #7
1.000 UP
4.000 UL
LT6
LC6 setrgbcolor
LCb setrgbcolor
2295 908 M
[ [(Courier) 170.0 0.0 true true 0 (IPC-Codes BM25)]
] -56.7 MRshow
LT6
2397 908 M
471 0 V
765 2070 M
181 -13 V
180 -17 V
181 -8 V
180 -24 V
181 -28 V
180 -6 V
361 -28 V
361 -32 V
361 -35 V
361 -67 V
361 -85 V
765 2070 CircleF
946 2057 CircleF
1126 2040 CircleF
1307 2032 CircleF
1487 2008 CircleF
1668 1980 CircleF
1848 1974 CircleF
2209 1946 CircleF
2570 1914 CircleF
2931 1879 CircleF
3292 1812 CircleF
3653 1727 CircleF
2632 908 CircleF
% End plot #7
% Begin plot #8
1.000 UP
4.000 UL
LT7
LC7 setrgbcolor
LCb setrgbcolor
2295 738 M
[ [(Courier) 170.0 0.0 true true 0 (IPC-Codes VSM)]
] -56.7 MRshow
LT7
2397 738 M
471 0 V
765 2087 M
181 -22 V
180 -15 V
181 -18 V
180 -13 V
181 -32 V
180 -26 V
361 -40 V
361 -29 V
361 -37 V
361 -72 V
361 -88 V
765 2087 TriU
946 2065 TriU
1126 2050 TriU
1307 2032 TriU
1487 2019 TriU
1668 1987 TriU
1848 1961 TriU
2209 1921 TriU
2570 1892 TriU
2931 1855 TriU
3292 1783 TriU
3653 1695 TriU
2632 738 TriU
% End plot #8
1.000 UL
LTb
LCb setrgbcolor
765 2316 N
765 590 L
2888 0 V
0 1726 V
-2888 0 V
Z stroke
1.000 UP
1.000 UL
LTb
LCb setrgbcolor
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica Courier
